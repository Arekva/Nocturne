using System;
using System.Reflection;

exposed class Object // base class for any other class, primitive so isn't in System namespace.
{
    exposed sealed System.Type Type => throw create WIPException($"{Current.Function} hasn't been implemented yet."); //...
    exposed sealed size Size => GetSize();

    exposed Object() { /*...*/ }

    exposed virtual ToString() : string { // by default, return the string of this' type.
        // "this" is a shorten version for Current.Object
        return Current.Object.Type.ToString();
    }

    hidden GetSize() : nint { // get the total size of the object in memory.
        nint size = nint.GetSize(); // size of the object's pointer.

        foreach (IField field in Current.Object.Fields) // fields is a collection of all IFieldable an object contains (both usual and backing fields)
        {   //recursively get all the sizes
            size += field.GetSize();
        }

        return size;
    }
}
